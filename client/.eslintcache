[{"C:\\Users\\shane\\OneDrive\\Desktop\\College\\AdvancedJS\\CA2\\ReactCA2\\src\\index.js":"1","C:\\Users\\shane\\OneDrive\\Desktop\\College\\AdvancedJS\\CA2\\ReactCA2\\src\\App.js":"2","C:\\Users\\shane\\OneDrive\\Desktop\\College\\AdvancedJS\\CA2\\ReactCA2\\src\\components\\Navbar.js":"3","C:\\Users\\shane\\OneDrive\\Desktop\\College\\AdvancedJS\\CA2\\ReactCA2\\src\\screens\\Login.js":"4","C:\\Users\\shane\\OneDrive\\Desktop\\College\\AdvancedJS\\CA2\\ReactCA2\\src\\screens\\Register.js":"5","C:\\Users\\shane\\OneDrive\\Desktop\\College\\AdvancedJS\\CA2\\ReactCA2\\src\\screens\\Logout.js":"6","C:\\Users\\shane\\OneDrive\\Desktop\\College\\AdvancedJS\\CA2\\ReactCA2\\src\\context\\UserContext.js":"7","C:\\Users\\shane\\OneDrive\\Desktop\\College\\AdvancedJS\\CA2\\ReactCA2\\src\\screens\\ArticleDetail.js":"8","C:\\Users\\shane\\OneDrive\\Desktop\\College\\AdvancedJS\\CA2\\ReactCA2\\src\\components\\modals\\CreateModal.js":"9","C:\\Users\\shane\\OneDrive\\Desktop\\College\\AdvancedJS\\CA2\\ReactCA2\\src\\components\\article\\Articles.js":"10","C:\\Users\\shane\\OneDrive\\Desktop\\College\\AdvancedJS\\CA2\\ReactCA2\\src\\components\\article\\List.js":"11","C:\\Users\\shane\\OneDrive\\Desktop\\College\\AdvancedJS\\CA2\\ReactCA2\\src\\components\\article\\Filters.js":"12","C:\\Users\\shane\\OneDrive\\Desktop\\College\\AdvancedJS\\CA2\\ReactCA2\\src\\components\\Comments.js":"13","C:\\Users\\shane\\OneDrive\\Desktop\\College\\AdvancedJS\\CA2\\ReactCA2\\src\\components\\modals\\UpdateModal.js":"14","C:\\Users\\shane\\OneDrive\\Desktop\\College\\AdvancedJS\\CA2\\ReactCA2\\src\\components\\modals\\DeleteModal.js":"15","C:\\Users\\shane\\OneDrive\\Desktop\\College\\AdvancedJS\\CA2\\ReactCA2\\src\\components\\modals\\CommentsModal.js":"16","C:\\Users\\shane\\OneDrive\\Desktop\\College\\AdvancedJS\\CA2\\ReactCA2\\src\\screens\\Account.js":"17"},{"size":262,"mtime":1610630009583,"results":"18","hashOfConfig":"19"},{"size":1063,"mtime":1612155084095,"results":"20","hashOfConfig":"19"},{"size":1534,"mtime":1612155225040,"results":"21","hashOfConfig":"19"},{"size":4980,"mtime":1612159585375,"results":"22","hashOfConfig":"19"},{"size":5989,"mtime":1612157976667,"results":"23","hashOfConfig":"19"},{"size":1419,"mtime":1612157603815,"results":"24","hashOfConfig":"19"},{"size":1047,"mtime":1612113838329,"results":"25","hashOfConfig":"19"},{"size":6509,"mtime":1612235901456,"results":"26","hashOfConfig":"19"},{"size":7288,"mtime":1612235153312,"results":"27","hashOfConfig":"19"},{"size":7153,"mtime":1612231225607,"results":"28","hashOfConfig":"19"},{"size":4765,"mtime":1612153815744,"results":"29","hashOfConfig":"19"},{"size":2314,"mtime":1611677269772,"results":"30","hashOfConfig":"19"},{"size":3689,"mtime":1612235920254,"results":"31","hashOfConfig":"19"},{"size":5844,"mtime":1612294318032,"results":"32","hashOfConfig":"19"},{"size":2405,"mtime":1612130522642,"results":"33","hashOfConfig":"19"},{"size":7845,"mtime":1612129848801,"results":"34","hashOfConfig":"19"},{"size":2471,"mtime":1612157778547,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"hkzia5",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"38"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"38"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"38"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"38"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"38"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"C:\\Users\\shane\\OneDrive\\Desktop\\College\\AdvancedJS\\CA2\\ReactCA2\\src\\index.js",[],["77","78"],"C:\\Users\\shane\\OneDrive\\Desktop\\College\\AdvancedJS\\CA2\\ReactCA2\\src\\App.js",[],"C:\\Users\\shane\\OneDrive\\Desktop\\College\\AdvancedJS\\CA2\\ReactCA2\\src\\components\\Navbar.js",[],"C:\\Users\\shane\\OneDrive\\Desktop\\College\\AdvancedJS\\CA2\\ReactCA2\\src\\screens\\Login.js",["79"],"import React, { useState, useContext } from 'react';\r\nimport { Form, Button, Card, Modal } from 'react-bootstrap'\r\nimport Lottie from 'react-lottie';\r\nimport * as animation from '../animations/login.json'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nimport { UserContext, signIn } from '../context/UserContext';\r\n\r\n\r\n\r\nconst config = {\r\n    loop: true,\r\n    autoplay: true,\r\n    animationData: animation.default,\r\n    rendererSettings: {\r\n        preserveAspectRatio: 'xMidYMid slice'\r\n    }\r\n};\r\n\r\nconst Login = () => {\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [emailError, setEmailError] = useState({});\r\n    const [passwordError, setPasswordError] = useState({});\r\n\r\n    // Form Handling\r\n    const submitForm = (e) => {\r\n        e.preventDefault();\r\n        const formValidated = validateForm();\r\n\r\n        if (formValidated) {\r\n            UserLoggedIn();\r\n        }\r\n    }\r\n\r\n    const validateForm = () => {\r\n        const emailError = {};\r\n        const passwordError = {};\r\n        let validated = true;\r\n\r\n        if (password.trim().length < 5) {\r\n            passwordError.lengthError = \"Password must be longer than 5 characters\"\r\n            validated = false;\r\n        }\r\n\r\n        if (email.trim().length === 0) {\r\n            emailError.validEmail = \"Please enter a valid email\"\r\n            validated = false;\r\n        }\r\n\r\n        setEmailError(emailError);\r\n        setPasswordError(passwordError)\r\n\r\n        return validated;\r\n    }\r\n\r\n    const url = \"http://localhost:8000/api/login\"\r\n    const history = useHistory();\r\n    const authContext = useContext(UserContext);\r\n\r\n\r\n    function UserLoggedIn() {\r\n\r\n        fetch(url, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                \"Access-Control-Allow-Origin\": \"*\",\r\n            },\r\n            body: JSON.stringify({\r\n                \"email\": email,\r\n                \"password\": password\r\n            })\r\n        }).then(response => response.json())\r\n            .then(\r\n                (responseBody) => {\r\n                    const token = responseBody[\"data\"][\"api_token\"];\r\n                    delete responseBody[\"data\"][\"api_token\"];\r\n\r\n                    authContext.dispatch({\r\n                        type: signIn,\r\n                        payload: {\r\n                            token: token,\r\n                            user: responseBody[\"data\"]\r\n                        }\r\n                    })\r\n\r\n                    // Required for profile\r\n                    localStorage.setItem(\"name\", responseBody[\"data\"][\"name\"]);\r\n                    localStorage.setItem(\"email\", responseBody[\"data\"][\"email\"]);\r\n                    localStorage.setItem(\"created\", responseBody[\"data\"][\"created_at\"]);\r\n                    history.push(`/`);\r\n                },\r\n            ).catch(function (error) {\r\n                return alert(\"The login details you entered are incorrect\")\r\n            });\r\n    }\r\n\r\n    return (\r\n        <div style={{ height: \"100vh\", marginBottom: 120 }}>\r\n            <div style={{\r\n                height: \"60vh\", backgroundColor: \"#0617d4\"\r\n            }}></div>\r\n            <Card className=\"loginCard\">\r\n                <Lottie options={config}\r\n                    style={{ marginBottom: 30 }}\r\n                    height={210}\r\n                    width={210} />\r\n                <Form onSubmit={submitForm} id=\"loginForm\">\r\n                    <Form.Group controlId=\"formBasicEmail\">\r\n                        <Form.Control\r\n                            className=\"formField\"\r\n                            type=\"email\"\r\n                            placeholder=\"Enter email\"\r\n                            value={email}\r\n                            onChange={(e) => { setEmail(e.target.value) }} />\r\n                        {Object.keys(emailError).map((key) => {\r\n                            return <div key={key} className=\"formError\">{emailError[key]}</div>\r\n                        })}\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"formBasicPassword\">\r\n                        <Form.Control\r\n                            className=\"formField\"\r\n                            type=\"password\"\r\n                            placeholder=\"Password\"\r\n                            value={password}\r\n                            onChange={(e) => { setPassword(e.target.value) }} />\r\n                        {Object.keys(passwordError).map((key) => {\r\n                            return <div key={key} className=\"formError\">{passwordError[key]}</div>\r\n                        })}\r\n                    </Form.Group>\r\n                    <Button className=\"loginBtn\" variant=\"primary\" type=\"submit\">\r\n                        Login\r\n                </Button>\r\n                </Form>\r\n            </Card>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default Login;\r\n","C:\\Users\\shane\\OneDrive\\Desktop\\College\\AdvancedJS\\CA2\\ReactCA2\\src\\screens\\Register.js",[],"C:\\Users\\shane\\OneDrive\\Desktop\\College\\AdvancedJS\\CA2\\ReactCA2\\src\\screens\\Logout.js",[],"C:\\Users\\shane\\OneDrive\\Desktop\\College\\AdvancedJS\\CA2\\ReactCA2\\src\\context\\UserContext.js",[],"C:\\Users\\shane\\OneDrive\\Desktop\\College\\AdvancedJS\\CA2\\ReactCA2\\src\\screens\\ArticleDetail.js",["80"],"import React, { useEffect, useState } from 'react';\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faArrowLeft, faUserTie, faCrown, faPlus } from '@fortawesome/free-solid-svg-icons';\r\nimport { Card, Row, Button, Spinner } from 'react-bootstrap';\r\nimport Comments from '../components/Comments';\r\n\r\nconst ArticleDetail = () => {\r\n\r\n    const history = useHistory();\r\n    const [articleObject, setArticleObject] = useState();\r\n\r\n    // Modal States\r\n    const [show, setShow] = useState(false);\r\n    const [isEditing, setIsEditing] = useState(false);\r\n    const [isDeleting, setIsDeleting] = useState(false);\r\n    const [isCreating, setIsCreating] = useState(false);\r\n\r\n\r\n    // Modal Component Checks\r\n    const isCreatingComment = () => {\r\n        setShow(true)\r\n        setIsCreating(true);\r\n    }\r\n\r\n    const isEditingComment = () => {\r\n        setShow(true)\r\n        setIsEditing(true);\r\n    }\r\n\r\n    const isDeletingComment = () => {\r\n        setShow(true)\r\n        setIsDeleting(true);\r\n    }\r\n\r\n    const hideModal = () => {\r\n        setShow(false);\r\n        setIsEditing(false);\r\n        setIsDeleting(false);\r\n        setIsCreating(false);\r\n    }\r\n\r\n\r\n    const singleArticle = (article) => {\r\n        setArticleObject(article);\r\n    }\r\n\r\n    const backButton = () => {\r\n        let path = `/`;\r\n        history.push(path);\r\n    }\r\n\r\n    let { id } = useParams();\r\n    const url = \"http://localhost:8000/api/articles/\" + id;\r\n    const token = localStorage.getItem(\"token\");\r\n    const [article, setArticle] = useState(\"\");\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [comments, setComments] = useState([]);\r\n\r\n    const headers = {\r\n        'Authorization': 'Bearer ' + token,\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json',\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetch(url, {\r\n            method: 'GET',\r\n            headers: headers,\r\n        }).then(response => response.json())\r\n            .then(\r\n                (article) => {\r\n                    singleArticle(article);\r\n                    setArticle(article);\r\n                    setComments(article.comments);\r\n                    setIsLoading(false);\r\n\r\n                    let path = `/article/` + id;\r\n                    history.push(path);\r\n                }\r\n            );\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            {isLoading ?\r\n                <div className=\"loadingContainer\">\r\n                    <Row>\r\n                        <div className=\"spinners\">\r\n                            <Spinner className=\"spinnerStyle\" animation=\"grow\" size=\"sm\" />\r\n                            <Spinner className=\"spinnerStyleMove\" animation=\"grow\" size=\"sm\" />\r\n                            <Spinner className=\"spinnerStyleMove\" animation=\"grow\" size=\"sm\" />\r\n                        </div>\r\n                    </Row>\r\n                </div>\r\n                :\r\n                <div className=\"detailContainer\">\r\n                    <Button\r\n                        className=\"backButton\"\r\n                        variant=\"primary\"\r\n                        onClick={backButton}>\r\n                        <div style={{ fontSize: 13 }}>\r\n                            <FontAwesomeIcon style={{ color: \"#fff\" }} icon={faArrowLeft} />\r\n                        </div>\r\n                    </Button>\r\n                    <Card className=\"commentsCard\">\r\n                        <h1>{article.title}</h1>\r\n                        <div style={{ marginTop: 20 }}>\r\n                            <Row>\r\n                                <div>\r\n                                    <Card\r\n                                        className=\"detailCard\">\r\n                                        <Row className=\"detailCardRow\">\r\n                                            <FontAwesomeIcon style={{ color: \"#2044d6\" }} icon={faCrown} />\r\n                                    &nbsp;&nbsp;\r\n                                    <p className=\"infoField\">{article.category.title}</p>\r\n                                        </Row>\r\n                                    </Card>\r\n                                </div>\r\n                                <div>\r\n                                    <Card\r\n                                        className=\"detailCard\">\r\n                                        <Row className=\"detailCardRow\">\r\n                                            <FontAwesomeIcon style={{ color: \"#2044d6\" }} icon={faUserTie} />\r\n                                    &nbsp;&nbsp;\r\n                                    <p className=\"infoField\">{article.user.name}</p>\r\n                                        </Row>\r\n                                    </Card>\r\n                                </div>\r\n                            </Row>\r\n                            <p className=\"detailBody\">{article.body}</p>\r\n                        </div>\r\n                    </Card>\r\n                    <div style={{ marginTop: 80, marginLeft: 12 }}>\r\n                        <Row>\r\n                            <h2 className=\"commentsHeading\">Comments</h2>\r\n                            <Button\r\n                                className=\"ml-auto\"\r\n                                id=\"createComment\"\r\n                                variant=\"primary\"\r\n                                onClick={isCreatingComment}>\r\n                                <div style={{ fontSize: 20 }}>\r\n                                    <FontAwesomeIcon style={{ color: \"#fff\" }} icon={faPlus} />\r\n                                </div>\r\n                            </Button>\r\n                        </Row>\r\n                    </div>\r\n\r\n                    <div style={{ marginTop: 30 }}>\r\n                        <Comments\r\n                            comments={comments}\r\n                            setComments={setComments}\r\n                            articleObject={articleObject}\r\n                            isEditingComment={isEditingComment}\r\n                            isDeletingComment={isDeletingComment}\r\n                            hideModal={hideModal}\r\n                            showModal={show}\r\n                            isCreating={isCreating}\r\n                            isEditing={isEditing}\r\n                            isDeleting={isDeleting}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            }\r\n        </>\r\n    );\r\n}\r\n\r\nexport default ArticleDetail;","C:\\Users\\shane\\OneDrive\\Desktop\\College\\AdvancedJS\\CA2\\ReactCA2\\src\\components\\modals\\CreateModal.js",[],"C:\\Users\\shane\\OneDrive\\Desktop\\College\\AdvancedJS\\CA2\\ReactCA2\\src\\components\\article\\Articles.js",["81","82","83"],"import React, { useState, useEffect, useContext } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport Filters from './Filters';\r\nimport List from './List';\r\nimport { Button, Container, Row, Col, Spinner } from 'react-bootstrap';\r\nimport Lottie from 'react-lottie';\r\nimport * as animation from '../../animations/newsify.json';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\r\nimport CreateModal from '../modals/CreateModal';\r\nimport { UserContext } from '../../context/UserContext';\r\n\r\nconst config = {\r\n    loop: true,\r\n    autoplay: true,\r\n    animationData: animation.default,\r\n    rendererSettings: {\r\n        preserveAspectRatio: 'xMidYMid slice'\r\n    }\r\n};\r\n\r\nconst Articles = () => {\r\n\r\n    const history = useHistory();\r\n\r\n    const loginRedirect = () => {\r\n\r\n        let path = `/login`;\r\n        history.push(path);\r\n    }\r\n\r\n    const registerRedirect = () => {\r\n\r\n        let path = `/register`;\r\n        history.push(path);\r\n    }\r\n\r\n    // Create Article Event\r\n    const [show, setShow] = useState(false);\r\n    const modalOpen = () => setShow(true);\r\n\r\n    const hideModal = () => {\r\n        setShow(false);\r\n    }\r\n\r\n    // Request essentials\r\n    const authContext = useContext(UserContext);\r\n    console.log(authContext);\r\n    var article_endpoint = \"http://localhost:8000/api/articles\";\r\n    const [articles, setArticles] = useState([]);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const token = localStorage.getItem(\"token\");\r\n\r\n    useEffect(() => {\r\n        if (authContext.authState.auth) {\r\n            fetch(article_endpoint, {\r\n                method: 'GET',\r\n                headers: {\r\n                    'Authorization': 'Bearer ' + token,\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                }\r\n            }).then(response => response.json())\r\n                .then(\r\n                    (articleData) => {\r\n                        setArticles(articleData);\r\n                        setIsLoading(false);\r\n                    }\r\n                )\r\n        }\r\n    }, []);\r\n\r\n    const [categories, setCategories] = useState([]);\r\n    var category_endpoint = \"http://localhost:8000/api/categories\";\r\n\r\n\r\n    // Categories Network Operations\r\n    useEffect(() => {\r\n        fetch(category_endpoint, {\r\n            method: 'GET',\r\n            headers: {\r\n                'Authorization': 'Bearer ' + token,\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n            }\r\n        })\r\n            .then(response => response.json())\r\n            .then(\r\n                (categoryData) => {\r\n                    setCategories(categoryData);\r\n                }\r\n            )\r\n    }, [])\r\n\r\n    const [categorySelected, setCategorySelected] = useState(null);\r\n    const [authorSelected, setAuthorSelected] = useState(null);\r\n\r\n    const onCategoryChange = (e) => {\r\n        const category = e.target.value;\r\n        setCategorySelected(category)\r\n    }\r\n\r\n    const onAuthorChange = (e) => {\r\n        const author = e.target.value;\r\n        setAuthorSelected(author)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {isLoading ?\r\n                <></>\r\n                :\r\n                <div className=\"articleContainer\" style={{ marginLeft: 100, marginRight: 100 }}>\r\n                    {authContext.authState.auth &&\r\n                        <div>\r\n                            <CreateModal\r\n                                setArticles={setArticles}\r\n                                categories={categories}\r\n                                showModal={show}\r\n                                hideModal={hideModal} />\r\n                            <Filters\r\n                                categories={categories}\r\n                                onCategoryChange={onCategoryChange}\r\n                                onAuthorChange={onAuthorChange} />\r\n                            <div style={{ textAlign: \"end\" }}>\r\n                                <Button\r\n                                    className=\"createArticle\"\r\n                                    variant=\"primary\"\r\n                                    onClick={modalOpen}>\r\n                                    <div style={{ fontSize: 20 }}>\r\n                                        <FontAwesomeIcon style={{ color: \"#fff\" }} icon={faPlus} />\r\n                                    </div>\r\n                                </Button>\r\n                            </div>\r\n                        </div>\r\n                    }\r\n                    {authContext.authState.auth &&\r\n                        <List\r\n                            setArticles={setArticles}\r\n                            categories={categories}\r\n                            articles={articles}\r\n                            categorySelected={categorySelected}\r\n                            authorSelected={authorSelected} />\r\n                    }\r\n                </div>\r\n            }\r\n            {authContext.authState.user == null && !authContext.authState.auth &&\r\n                <Container className=\"homeCont\">\r\n                    <Row>\r\n                        <Col>\r\n                            <div>\r\n                                <h3 className=\"homeTitle\">Welcome to <b>Newsify</b> For All Your Daily News </h3>\r\n                                <p className=\"homeDesc\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Quisque tincidunt placerat mauris, nec pulvinar tellus mattis a. Nulla nec orci nisl. Phasellus iaculis quis purus non scelerisque. Pellentesque diam lacus, suscipit ac semper id, mattis at lorem. Aenean pulvinar congue tristique. Phasellus neque urna, facilisis in porttitor eget, laoreet sed ex. Duis imperdiet vehicula leo, venenatis luctus tortor placerat vitae. Maecenas consequat egestas lacus, quis ultricies lacus. Nullam in sapien efficitur, tempor dolor sed, pulvinar felis. Nunc facilisis ligula ex, et faucibus erat bibendum nec.</p>\r\n                                <Button\r\n                                    className=\"homeBtn\"\r\n                                    variant=\"primary\"\r\n                                    onClick={loginRedirect}>\r\n                                    Login\r\n                                        </Button>\r\n                                <Button\r\n                                    className=\"homeRegBtn\"\r\n                                    variant=\"primary\"\r\n                                    onClick={registerRedirect}>\r\n                                    Register\r\n                                </Button>\r\n                            </div>\r\n                        </Col>\r\n                        <Col>\r\n                            <Lottie options={config}\r\n                                style={{ marginBottom: 30 }}\r\n                                height={370}\r\n                                width={370} />\r\n                        </Col>\r\n                    </Row>\r\n                </Container >\r\n            }\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Articles;","C:\\Users\\shane\\OneDrive\\Desktop\\College\\AdvancedJS\\CA2\\ReactCA2\\src\\components\\article\\List.js",[],"C:\\Users\\shane\\OneDrive\\Desktop\\College\\AdvancedJS\\CA2\\ReactCA2\\src\\components\\article\\Filters.js",[],"C:\\Users\\shane\\OneDrive\\Desktop\\College\\AdvancedJS\\CA2\\ReactCA2\\src\\components\\Comments.js",["84"],"import React, { useContext, useState } from 'react';\r\nimport { Card, Button, Row } from 'react-bootstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPencilAlt, faTrashAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport CommentsModal from './modals/CommentsModal';\r\nimport { UserContext } from '../context/UserContext';\r\n\r\nconst Comments = ({\r\n    articleObject,\r\n    hideModal,\r\n    showModal,\r\n    isEditingComment,\r\n    isDeletingComment,\r\n    isCreating,\r\n    isEditing,\r\n    isDeleting,\r\n    setComments,\r\n    comments,\r\n}) => {\r\n\r\n    const [selectedComment, setSelectedComment] = useState();\r\n\r\n    const deleteComment = (id) => {\r\n        setSelectedComment(id)\r\n    }\r\n\r\n    const authContext = useContext(UserContext);\r\n\r\n    return (\r\n        <>\r\n            <CommentsModal\r\n                selectedComment={selectedComment}\r\n                setComments={setComments}\r\n                articleObject={articleObject}\r\n                showModal={showModal}\r\n                hideModal={hideModal}\r\n                isCreating={isCreating}\r\n                isEditing={isEditing}\r\n                isDeleting={isDeleting}\r\n            />\r\n            {comments.length != 0 ?\r\n                <>\r\n                    {\r\n                        comments.map(comment => (\r\n                            <Card\r\n                                className=\"commentsCard\"\r\n                                key={comment.id}>\r\n                                <h1 className=\"commentsQuote\">\"</h1>\r\n                                <h5 className=\"commentsTitle\">{comment.body}</h5>\r\n                                <Row>\r\n                                    {authContext.authState.user !== null && authContext.authState.user.id === comment.user_id &&\r\n                                        <>\r\n                                            <Button\r\n                                                className=\"editArticle\"\r\n                                                variant=\"primary\"\r\n                                                onClick={isEditingComment}>\r\n                                                <div style={{ fontSize: 13 }}>\r\n                                                    <FontAwesomeIcon style={{ color: \"#fff\" }} icon={faPencilAlt} />\r\n                                                </div>\r\n                                            </Button>\r\n                                            <Button\r\n                                                className=\"deleteArticle\"\r\n                                                variant=\"primary\"\r\n                                                onClick={() => {\r\n                                                    deleteComment(comment.id)\r\n                                                    isDeletingComment()\r\n                                                }\r\n                                                }>\r\n                                                <div style={{ fontSize: 13 }}>\r\n                                                    <FontAwesomeIcon style={{ color: \"#fff\" }} icon={faTrashAlt} />\r\n                                                </div>\r\n                                            </Button>\r\n                                        </>\r\n                                    }\r\n                                </Row>\r\n                            </Card>\r\n                        ))\r\n                    }\r\n                </>\r\n                :\r\n                <div>\r\n                    <h4 className=\"noComments\">There are no comments here yet. Try add one. </h4>\r\n                </div>\r\n            }\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Comments;","C:\\Users\\shane\\OneDrive\\Desktop\\College\\AdvancedJS\\CA2\\ReactCA2\\src\\components\\modals\\UpdateModal.js",["85","86","87","88","89","90"],"import React, { useState, } from 'react';\r\nimport { Button, Modal, Form } from 'react-bootstrap';\r\nimport Lottie from 'react-lottie';\r\nimport * as animation from '../../animations/updateArticle.json';\r\n\r\nconst config = {\r\n    loop: true,\r\n    autoplay: true,\r\n    animationData: animation.default,\r\n    rendererSettings: {\r\n        preserveAspectRatio: 'xMidYMid slice'\r\n    }\r\n};\r\n\r\nconst UpdateModal = ({\r\n    showModal,\r\n    hideModal,\r\n    categories,\r\n    articleObject,\r\n    handleChange,\r\n    setArticles,\r\n    articles }) => {\r\n\r\n    let articleTitle = articleObject?.title;\r\n    let articleBody = articleObject?.body;\r\n    let articleCategory = articleObject?.category_id;\r\n\r\n    const [categoryId, setCategoryId] = useState(\"\");\r\n    const [title, setTitle] = useState(\"\");\r\n    const [body, setBody] = useState(\"\");\r\n\r\n    const submitForm = (e) => {\r\n        e.preventDefault();\r\n        updateArticle();\r\n    }\r\n\r\n    const url = \"http://localhost:8000/api/articles/\" + articleObject?.id;\r\n    const token = localStorage.getItem(\"token\");\r\n\r\n    function updateArticle() {\r\n\r\n        fetch(url, {\r\n            method: 'PUT',\r\n            headers: {\r\n                'Authorization': 'Bearer ' + token,\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                \"Access-Control-Allow-Origin\": \"*\",\r\n            },\r\n            body: JSON.stringify({\r\n                \"category_id\": articleCategory,\r\n                \"title\": articleTitle,\r\n                \"body\": articleBody\r\n            })\r\n        }).then(response => response.json())\r\n            .then(\r\n                (article) => {\r\n\r\n                    article.category = categories.filter(\r\n                        cat => `${cat.id}` === articleCategory)[0]\r\n\r\n                    // Update article locally\r\n                    const newArticles = articles;\r\n                    const articleIndex = articles.findIndex(a => a.id === article.id);\r\n                    newArticles[articleIndex] = article;\r\n                    console.log(newArticles);\r\n\r\n                    setArticles(newArticles)\r\n                },\r\n                (error) => {\r\n                    console.log(error);\r\n                }\r\n            ).then(\r\n                hideModal()\r\n            );\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {/* To populate the fields we need to get the ID of the selected article and pull in its' fields */}\r\n            <Modal contentClassName=\"articleModal\" show={showModal} onHide={hideModal}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title className=\"modalTitle\">Edit Article</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <Lottie options={config}\r\n                        style={{ marginBottom: 30 }}\r\n                        height={150}\r\n                        width={150} />\r\n                    <Form onSubmit={submitForm} id=\"modalForm\">\r\n                        <Form.Group controlId=\"exampleForm.ControlSelect1\">\r\n                            <Form.Control\r\n                                name=\"category_id\"\r\n                                className=\"modalField\"\r\n                                required\r\n                                value={articleObject?.category_id}\r\n                                onChange={handleChange}\r\n                                as=\"select\">\r\n                                <option value=\"\" disabled selected={\r\n                                    articleCategory == null}>\r\n                                    Please select a category\r\n                                    </option>\r\n                                {categories.map(category => (\r\n                                    <option\r\n                                        defaultValue={articleObject?.category_id === category.id}\r\n                                        value={category.id}>\r\n                                        {category.title}\r\n                                    </option>\r\n                                ))}\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId=\"formBasicText\">\r\n                            <Form.Control\r\n                                name=\"title\"\r\n                                required\r\n                                className=\"modalField\"\r\n                                type=\"text\"\r\n                                placeholder=\"Enter Article Title\"\r\n                                value={articleObject?.title}\r\n                                onChange={handleChange} />\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId=\"formBasicText\">\r\n                            <Form.Control\r\n                                name=\"body\"\r\n                                required\r\n                                className=\"modalField\"\r\n                                type=\"text\"\r\n                                value={articleObject?.body}\r\n                                onChange={handleChange}\r\n                                placeholder=\"Enter Article Information\" />\r\n                        </Form.Group>\r\n                        <Button\r\n                            className=\"modalClose\"\r\n                            variant=\"secondary\"\r\n                            onClick={hideModal}>\r\n                            Close\r\n                    </Button>\r\n                        <Button\r\n                            className=\"createModal\"\r\n                            variant=\"primary\"\r\n                            type=\"submit\">\r\n                            Update\r\n                    </Button>\r\n                    </Form>\r\n                </Modal.Body>\r\n            </Modal>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default UpdateModal;\r\n","C:\\Users\\shane\\OneDrive\\Desktop\\College\\AdvancedJS\\CA2\\ReactCA2\\src\\components\\modals\\DeleteModal.js",[],"C:\\Users\\shane\\OneDrive\\Desktop\\College\\AdvancedJS\\CA2\\ReactCA2\\src\\components\\modals\\CommentsModal.js",["91","92","93","94","95","96"],"import React, { useState, useContext } from 'react';\r\nimport { Modal, Form, Button, } from 'react-bootstrap';\r\nimport Lottie from 'react-lottie';\r\nimport * as animation from '../../animations/comment.json';\r\nimport * as animation2 from '../../animations/createcomment.json';\r\nimport * as animation3 from '../../animations/delete.json';\r\nimport { UserContext } from '../../context/UserContext';\r\n\r\nconst animConfig1 = {\r\n    loop: true,\r\n    autoplay: true,\r\n    animationData: animation2.default,\r\n    rendererSettings: {\r\n        preserveAspectRatio: 'xMidYMid slice'\r\n    }\r\n};\r\n\r\nconst animConfig2 = {\r\n    loop: true,\r\n    autoplay: true,\r\n    animationData: animation.default,\r\n    rendererSettings: {\r\n        preserveAspectRatio: 'xMidYMid slice'\r\n    }\r\n};\r\n\r\nconst animConfig3 = {\r\n    loop: true,\r\n    autoplay: true,\r\n    animationData: animation3.default,\r\n    rendererSettings: {\r\n        preserveAspectRatio: 'xMidYMid slice'\r\n    }\r\n};\r\n\r\nconst CommentsModal = ({\r\n    articleObject,\r\n    showModal,\r\n    hideModal,\r\n    isCreating,\r\n    isEditing,\r\n    isDeleting,\r\n    setComments,\r\n    selectedComment\r\n}) => {\r\n\r\n    const [body, setBody] = useState(\"\");\r\n    const [bodyError, setBodyError] = useState({});\r\n    const authContext = useContext(UserContext);\r\n\r\n    const commentCreate = (e) => {\r\n        e.preventDefault();\r\n        const formValidated = validateForm();\r\n\r\n        if (formValidated) {\r\n            postComment();\r\n        }\r\n    }\r\n\r\n    const validateForm = () => {\r\n\r\n        const bodyError = {};\r\n        let validated = true;\r\n\r\n        if (body.trim().length < 10) {\r\n            bodyError.invalidBody = \"Please write a comment longer than 10 characters\"\r\n            validated = false;\r\n        }\r\n        setBodyError(bodyError);\r\n\r\n        return validated;\r\n    }\r\n\r\n\r\n    const url = \"http://localhost:8000/api/comments\"\r\n    const token = localStorage.getItem(\"token\");\r\n    const headers = {\r\n        'Authorization': 'Bearer ' + token,\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json',\r\n    }\r\n\r\n    let userId = authContext.authState.user !== null && authContext.authState.user.id\r\n    let articleId = articleObject.id\r\n\r\n    function postComment() {\r\n        fetch(url, {\r\n            method: 'POST',\r\n            headers: headers,\r\n            body: JSON.stringify({\r\n                \"body\": body,\r\n                \"user_id\": userId, // User ID from reducer\r\n                \"article_id\": articleId // Passed in article object ID\r\n            })\r\n        }).then(response => response.json())\r\n            .then(\r\n                (newComments) => {\r\n                    setComments(oldComments => {\r\n                        return [...oldComments, newComments]\r\n                    });\r\n                    hideModal()\r\n                }\r\n            )\r\n    }\r\n\r\n    const deleteURL = \"http://localhost:8000/api/comments/\" + selectedComment;\r\n\r\n    function deleteComment() {\r\n        fetch(deleteURL, {\r\n            method: 'DELETE',\r\n            headers: headers,\r\n        }).then(\r\n            (response) => {\r\n                // Delete Comment Locally\r\n                setComments(comments => comments.filter(comment => comment.id !== selectedComment));\r\n                hideModal()\r\n            }\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Modal contentClassName=\"articleModal\" show={showModal} onHide={hideModal}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title\r\n                        className=\"modalTitle\">\r\n                        {\r\n                            isEditing && \"Edit Comment\" ||\r\n                            isCreating && \"Create Comment\" ||\r\n                            isDeleting && \"Delete Comment\"\r\n                        }\r\n                    </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    {isCreating &&\r\n                        <Lottie options={animConfig1}\r\n                            style={{ marginBottom: 30 }}\r\n                            height={150}\r\n                            width={250} />\r\n                    }\r\n                    {isEditing &&\r\n                        <Lottie options={animConfig2}\r\n                            style={{ marginBottom: 30 }}\r\n                            height={140}\r\n                            width={140} />\r\n                    }\r\n                    {isDeleting &&\r\n                        <div style={{ marginTop: 30 }}>\r\n                            <Lottie options={animConfig3}\r\n                                style={{ marginBottom: 30 }}\r\n                                height={140}\r\n                                width={140} />\r\n                        </div>\r\n                    }\r\n\r\n                    {isEditing || isCreating ?\r\n                        <>\r\n                            <Form id=\"modalForm\">\r\n\r\n                                <Form.Group controlId=\"formBasicText\">\r\n                                    <Form.Control\r\n                                        as=\"textarea\" rows={5}\r\n                                        className=\"commentField\"\r\n                                        type=\"text\"\r\n                                        value={body}\r\n                                        onChange={(e) => { setBody(e.target.value) }}\r\n                                        placeholder=\"Please write a suitable comment\"\r\n                                    />\r\n                                    {Object.keys(bodyError).map((key) => {\r\n                                        return <div key={key} className=\"formError\">{bodyError[key]}</div>\r\n                                    })}\r\n                                </Form.Group>\r\n                                <Button\r\n                                    className=\"modalClose\"\r\n                                    variant=\"secondary\"\r\n                                    onClick={hideModal}>\r\n                                    Close\r\n                                </Button>\r\n                                {isCreating &&\r\n                                    <Button\r\n                                        className=\"createModal\"\r\n                                        variant=\"primary\"\r\n                                        type=\"submit\"\r\n                                        onClick={commentCreate}>\r\n                                        Create\r\n                                </Button>\r\n                                }\r\n                                {isEditing &&\r\n                                    <Button\r\n                                        className=\"createModal\"\r\n                                        variant=\"primary\"\r\n                                        type=\"submit\">\r\n                                        Edit\r\n                                     </Button>\r\n                                }\r\n                            </Form>\r\n                        </>\r\n                        :\r\n                        <>\r\n                            <h6 className=\"deleteModalText\">Are you sure you want to delete this comment?</h6>\r\n                            <h6 className=\"deleteModalDesc\">This comment will not appear anymore under this article.</h6>\r\n                            <div style={{ textAlign: 'center' }}>\r\n                                <Button\r\n                                    className=\"modalDeleteBtn\"\r\n                                    variant=\"primary\"\r\n                                    onClick={deleteComment}>\r\n                                    Delete\r\n                                </Button>\r\n                            </div>\r\n                        </>\r\n                    }\r\n                </Modal.Body>\r\n            </Modal>\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default CommentsModal;","C:\\Users\\shane\\OneDrive\\Desktop\\College\\AdvancedJS\\CA2\\ReactCA2\\src\\screens\\Account.js",[],{"ruleId":"97","replacedBy":"98"},{"ruleId":"99","replacedBy":"100"},{"ruleId":"101","severity":1,"message":"102","line":2,"column":30,"nodeType":"103","messageId":"104","endLine":2,"endColumn":35},{"ruleId":"105","severity":1,"message":"106","line":82,"column":8,"nodeType":"107","endLine":82,"endColumn":10,"suggestions":"108"},{"ruleId":"101","severity":1,"message":"109","line":5,"column":39,"nodeType":"103","messageId":"104","endLine":5,"endColumn":46},{"ruleId":"105","severity":1,"message":"110","line":71,"column":8,"nodeType":"107","endLine":71,"endColumn":10,"suggestions":"111"},{"ruleId":"105","severity":1,"message":"112","line":93,"column":8,"nodeType":"107","endLine":93,"endColumn":10,"suggestions":"113"},{"ruleId":"114","severity":1,"message":"115","line":41,"column":30,"nodeType":"116","messageId":"117","endLine":41,"endColumn":32},{"ruleId":"101","severity":1,"message":"118","line":28,"column":12,"nodeType":"103","messageId":"104","endLine":28,"endColumn":22},{"ruleId":"101","severity":1,"message":"119","line":28,"column":24,"nodeType":"103","messageId":"104","endLine":28,"endColumn":37},{"ruleId":"101","severity":1,"message":"120","line":29,"column":12,"nodeType":"103","messageId":"104","endLine":29,"endColumn":17},{"ruleId":"101","severity":1,"message":"121","line":29,"column":19,"nodeType":"103","messageId":"104","endLine":29,"endColumn":27},{"ruleId":"101","severity":1,"message":"122","line":30,"column":12,"nodeType":"103","messageId":"104","endLine":30,"endColumn":16},{"ruleId":"101","severity":1,"message":"123","line":30,"column":18,"nodeType":"103","messageId":"104","endLine":30,"endColumn":25},{"ruleId":"124","severity":1,"message":"125","line":128,"column":39,"nodeType":"126","messageId":"127","endLine":128,"endColumn":41},{"ruleId":"124","severity":1,"message":"125","line":128,"column":57,"nodeType":"126","messageId":"127","endLine":128,"endColumn":59},{"ruleId":"124","severity":1,"message":"128","line":128,"column":57,"nodeType":"126","messageId":"127","endLine":128,"endColumn":59},{"ruleId":"124","severity":1,"message":"128","line":129,"column":40,"nodeType":"126","messageId":"127","endLine":129,"endColumn":42},{"ruleId":"124","severity":1,"message":"128","line":129,"column":60,"nodeType":"126","messageId":"127","endLine":129,"endColumn":62},{"ruleId":"124","severity":1,"message":"128","line":130,"column":40,"nodeType":"126","messageId":"127","endLine":130,"endColumn":42},"no-native-reassign",["129"],"no-negated-in-lhs",["130"],"no-unused-vars","'Modal' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'headers', 'history', 'id', and 'url'. Either include them or remove the dependency array.","ArrayExpression",["131"],"'Spinner' is defined but never used.","React Hook useEffect has missing dependencies: 'article_endpoint', 'authContext.authState.auth', and 'token'. Either include them or remove the dependency array.",["132"],"React Hook useEffect has missing dependencies: 'category_endpoint' and 'token'. Either include them or remove the dependency array.",["133"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'categoryId' is assigned a value but never used.","'setCategoryId' is assigned a value but never used.","'title' is assigned a value but never used.","'setTitle' is assigned a value but never used.","'body' is assigned a value but never used.","'setBody' is assigned a value but never used.","no-mixed-operators","Unexpected mix of '&&' and '||'.","LogicalExpression","unexpectedMixedOperator","Unexpected mix of '||' and '&&'.","no-global-assign","no-unsafe-negation",{"desc":"134","fix":"135"},{"desc":"136","fix":"137"},{"desc":"138","fix":"139"},"Update the dependencies array to be: [headers, history, id, url]",{"range":"140","text":"141"},"Update the dependencies array to be: [article_endpoint, authContext.authState.auth, token]",{"range":"142","text":"143"},"Update the dependencies array to be: [category_endpoint, token]",{"range":"144","text":"145"},[2409,2411],"[headers, history, id, url]",[2182,2184],"[article_endpoint, authContext.authState.auth, token]",[2843,2845],"[category_endpoint, token]"]